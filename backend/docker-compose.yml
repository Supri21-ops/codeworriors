version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: manufacturing_postgres
    environment:
      POSTGRES_DB: erpdb
      POSTGRES_USER: erpuser
      POSTGRES_PASSWORD: erppass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - manufacturing_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: manufacturing_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - manufacturing_network

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: manufacturing_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - manufacturing_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: manufacturing_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - manufacturing_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: manufacturing_backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://manufacturing_user:manufacturing_password@postgres:5432/manufacturing_db
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - manufacturing_network
    restart: unless-stopped

  # Frontend (optional - for development)
  frontend:
    build:
      context: ../Frontend
      dockerfile: Dockerfile
    container_name: manufacturing_frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000/api
    depends_on:
      - backend
    networks:
      - manufacturing_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  manufacturing_network:
    driver: bridge